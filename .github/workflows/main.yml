name: Check for Docker Releases and Apply to EKS

on:
  schedule:
    - cron: '0 0 * * *'  # Runs every midnight
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        
      - name: List files for debugging
        run: ls -al  # Lists all files and directories for debugging purposes

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Check for New Docker Images
        id: check_docker_images
        run: |
          IMAGE_BACKEND=hemanthkolli99/backend  # Replace with your Docker Hub username
          IMAGE_FRONTEND=hemanthkolli99/frontend  # Replace with your Docker Hub username

          TAG_BACKEND=$(curl -s "https://hub.docker.com/v2/repositories/${IMAGE_BACKEND}/tags?page_size=1" | jq -r '.results[0].name')
          TAG_FRONTEND=$(curl -s "https://hub.docker.com/v2/repositories/${IMAGE_FRONTEND}/tags?page_size=1" | jq -r '.results[0].name')

          echo "Latest backend tag is $TAG_BACKEND"
          echo "Latest frontend tag is $TAG_FRONTEND"

          echo "latest_backend_tag=$TAG_BACKEND" >> $GITHUB_OUTPUT
          echo "latest_frontend_tag=$TAG_FRONTEND" >> $GITHUB_OUTPUT

      - name: Set up AWS EKS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update Kubeconfig
        run: |
          aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name doctor-office-cluster  # Replace with your EKS cluster name

      - name: Deploy to EKS
        run: |
          # Apply the updated Kubernetes configuration files
          kubectl apply -f backenddeploy.yml
          kubectl apply -f frontend.yml
